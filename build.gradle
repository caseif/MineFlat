plugins {
	id 'java'
	id 'eclipse'
	id 'idea'

    id 'com.github.hierynomus.license' version '0.11.0'
}

apply plugin: 'checkstyle'

defaultTasks 'clean', 'licenseFormat', 'build'

// Project information
group = 'com.headswilllol.mineflat'
version = '1.2.0'

// Extended project information
ext.projectName = 'MineFlat'
ext.description = 'A 2D voxel-based game inspired by Terraria.'
ext.inceptionYear = '2013'
ext.packaging = 'jar'
ext.versionSuffix = version.contains('SNAPSHOT') && System.getenv("BUILD_NUMBER") ? '-jnks' + System.getenv("BUILD_NUMBER") : ''

sourceCompatibility = 1.7
targetCompatibility = 1.7

ext {

	lwjgl = 'org.lwjgl.lwjgl:lwjgl:2.9.1'
	gson  = 'com.google.code.gson:gson:2.3'
	jsonsimple = 'com.googlecode.json-simple:json-simple:1.1.1'
	guava = 'com.google.guava:guava:18.0'
	codecjorbis = 'com.paulscode.sound:codecjorbis:0.0.1'
	librarylwjglopenal = 'com.paulscode.sound:librarylwjglopenal:0.0.1'
	soundsystem = 'com.paulscode.sound:soundsystem:0.0.1'
}

// Project repositories
repositories {
	mavenCentral()
	maven { url 'http://repo.amigocraft.net/content/groups/public/' }
	maven { url 'http://ooo-maven.googlecode.com/hg/repository/' }
}

// Project dependencies
dependencies {
    compile lwjgl
	compile gson
	compile jsonsimple
	compile guava
	compile codecjorbis
	compile librarylwjglopenal
	compile soundsystem
}

// Read source files using UTF-8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

jar {
	manifest {
		attributes(
				"Implementation-Title": project.name,
				"Implementation-Version": version,
				"Main-Class": "com.headswilllol.mineflat.Main",
				"Class-Path": "lib/lwjgl.jar lib/gson.jar lib/json-simple.jar lib/soundsystem/soundsystem.jar " +
						"lib/soundsystem/librarylwjglopenal.jar lib/soundsystem/codecjorbis.jar lib/guava.jar"
		)
	}
}

processResources {
  filter { String line -> line.replace('%VERSION%', versionSuffix) }
}

// License header formatting
license {
	header file('src/main/resources/LICENSE')
	excludes(['**/*.json', '**/*.txt', '**/PNGDecoder.java'])
	sourceSets = project.sourceSets
	ignoreFailures false
	strictCheck true
	mapping {
		java = 'SLASHSTAR_STYLE'
	}
}

// check code style
checkstyle {
    configProperties = [
            "name"        : project.name,
            "year"        : project.inceptionYear
    ]
    configFile = file("etc/checkstyle.xml")
}
